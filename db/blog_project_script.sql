-- MySQL Script generated by MySQL Workbench
-- 11/01/16 10:22:26
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sdbm
-- -----------------------------------------------------
-- silencers
DROP SCHEMA IF EXISTS `sdbm` ;

-- -----------------------------------------------------
-- Schema sdbm
--
-- silencers
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sdbm` DEFAULT CHARACTER SET cp1250 ;
USE `sdbm` ;

-- -----------------------------------------------------
-- Table `sdbm`.`BlogItem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sdbm`.`BlogItem` ;

CREATE TABLE IF NOT EXISTS `sdbm`.`BlogItem` (
  `ID` VARCHAR(36) NOT NULL,
  `ItemID` VARCHAR(36) NOT NULL,
  `ItemName` TEXT(32) NOT NULL,
  `BlogTextID` VARCHAR(36) NOT NULL,
  `BlogPhotoID` VARCHAR(36) NOT NULL,
  `Status` INT NOT NULL DEFAULT 0,
  `X_CreateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `X_UpdateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `X_RemoveTime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sdbm`.`BlogText`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sdbm`.`BlogText` ;

CREATE TABLE IF NOT EXISTS `sdbm`.`BlogText` (
  `ID` VARCHAR(36) NOT NULL,
  `BlogItemID` VARCHAR(36) NULL,
  `Text` LONGTEXT NOT NULL,
  `Status` INT NOT NULL DEFAULT 0,
  `X_CreateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `X_UpdateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `X_RemoveTime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sdbm`.`BlogPhoto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sdbm`.`BlogPhoto` ;

CREATE TABLE IF NOT EXISTS `sdbm`.`BlogPhoto` (
  `ID` VARCHAR(36) NOT NULL,
  `BlogItemID` VARCHAR(36) NOT NULL,
  `Name` TEXT(20) NOT NULL,
  `Status` INT NOT NULL DEFAULT 0,
  `X_CreateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `X_UpdateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `X_RemoveTime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sdbm`.`DicBlogStatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sdbm`.`DicBlogStatus` ;

CREATE TABLE IF NOT EXISTS `sdbm`.`DicBlogStatus` (
  `ID` VARCHAR(36) NOT NULL,
  `Code` INT NOT NULL,
  `StatusName` TEXT(10) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC),
  UNIQUE INDEX `Code_UNIQUE` (`Code` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sdbm`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sdbm`.`User` ;

CREATE TABLE IF NOT EXISTS `sdbm`.`User` (
  `ID` VARCHAR(36) NOT NULL,
  `Username` TEXT(16) NOT NULL,
  `Email` TEXT(32) NULL,
  `Pwd` TEXT(32) NOT NULL,
  `X_Create_Time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC));


-- -----------------------------------------------------
-- Table `sdbm`.`BlogComment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sdbm`.`BlogComment` ;

CREATE TABLE IF NOT EXISTS `sdbm`.`BlogComment` (
  `ID` VARCHAR(36) NOT NULL,
  `BlogItemID` VARCHAR(36) NULL DEFAULT NULL,
  `Author` VARCHAR(36) NOT NULL,
  `Text` TEXT NOT NULL,
  `X_CreateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `X_UpdateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `X_RemoveTime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sdbm`.`BlogItemHsitory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sdbm`.`BlogItemHsitory` ;

CREATE TABLE IF NOT EXISTS `sdbm`.`BlogItemHsitory` (
  `ID` VARCHAR(36) NOT NULL,
  `BlogItemID` VARCHAR(36) NOT NULL,
  `Status` INT NULL,
  `Action` TEXT(15) NOT NULL,
  `X_CreateTime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC))
ENGINE = InnoDB;

USE `sdbm`;

DELIMITER $$

USE `sdbm`$$
DROP TRIGGER IF EXISTS `sdbm`.`BlogItem_AFTER_INSERT` $$
USE `sdbm`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sdbm`.`BlogItem_AFTER_INSERT` AFTER INSERT ON `BlogItem` FOR EACH ROW
BEGIN
INSERT INTO `sdbm`.`BlogItemHsitory` 
(`ID`, `BlogItemID`, `Status`, `Action`, `X_CreateTime`)
VALUES 
(uuid(), 
(SELECT `ID`, `Status`
FROM inserted),
"INSERT", NOW());
END$$


USE `sdbm`$$
DROP TRIGGER IF EXISTS `sdbm`.`BlogItem_AFTER_UPDATE` $$
USE `sdbm`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sdbm`.`BlogItem_AFTER_UPDATE` AFTER UPDATE ON `BlogItem` FOR EACH ROW
BEGIN
INSERT INTO `sdbm`.`BlogItemHsitory` 
(`ID`, `BlogItemID`, `Status`, `Action`, `X_CreateTime`)
VALUES 
(uuid(), 
(SELECT `ID`, `Status`
FROM updated),
"UPDATE", NOW());
END$$


USE `sdbm`$$
DROP TRIGGER IF EXISTS `sdbm`.`BlogItem_AFTER_DELETE` $$
USE `sdbm`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sdbm`.`BlogItem_AFTER_DELETE` AFTER DELETE ON `BlogItem` FOR EACH ROW
BEGIN
INSERT INTO `sdbm`.`BlogItemHsitory` 
(`ID`, `BlogItemID`, `Status`, `Action`, `X_CreateTime`)
VALUES 
(uuid(), 
(SELECT `ID`, `Status`
FROM deleted),
"DELETE", NOW());
END$$


USE `sdbm`$$
DROP TRIGGER IF EXISTS `sdbm`.`BlogText_AFTER_INSERT` $$
USE `sdbm`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sdbm`.`BlogText_AFTER_INSERT` AFTER INSERT ON `BlogText` FOR EACH ROW
BEGIN
INSERT INTO `sdbm`.`BlogItem` 
(`ID`, `ItemID`, `BlogTextID`, `BlogPhotoID`, `Status`, `X_CreateTime`, `X_UpdateTime`, `X_RemoveTime`) 
VALUES 
(UUID(), 


NULL, NULL, NULL, NULL, NULL, NULL, NULL);
END$$


USE `sdbm`$$
DROP TRIGGER IF EXISTS `sdbm`.`BlogPhoto_AFTER_INSERT` $$
USE `sdbm`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sdbm`.`BlogPhoto_AFTER_INSERT` AFTER INSERT ON `BlogPhoto` FOR EACH ROW
BEGIN

END
$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
